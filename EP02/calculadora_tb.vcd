$date
	Sat Apr 20 16:42:12 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module calculadora_tb $end
$var wire 32 ! data [31:0] $end
$var parameter 32 " W $end
$var reg 1 # clock $end
$var reg 1 $ opera $end
$var reg 5 % read [4:0] $end
$var reg 1 & reset $end
$var integer 32 ' i [31:0] $end
$scope module dut $end
$var wire 1 # clock $end
$var wire 32 ( data [31:0] $end
$var wire 1 $ opera $end
$var wire 5 ) read [4:0] $end
$var wire 1 & reset $end
$var wire 32 * romOut [31:0] $end
$var wire 5 + regRead1Mux [4:0] $end
$var wire 32 , regOut2 [31:0] $end
$var wire 32 - regOut1 [31:0] $end
$var wire 32 . AluOut [31:0] $end
$var wire 32 / AluBMUX [31:0] $end
$var parameter 4 0 AandB $end
$var parameter 4 1 AlessthanB $end
$var parameter 4 2 AminusB $end
$var parameter 4 3 AnorB $end
$var parameter 4 4 AorB $end
$var parameter 4 5 AplusB $end
$var parameter 32 6 W $end
$var reg 4 7 AluCtl [3:0] $end
$var reg 32 8 out [31:0] $end
$var reg 1 9 regWE $end
$var reg 4 : romAddr [3:0] $end
$var reg 1 ; romOE $end
$var integer 32 < i [31:0] $end
$scope module alu $end
$var wire 4 = ALUctl [3:0] $end
$var wire 32 > B [31:0] $end
$var wire 1 ? Overflow $end
$var wire 1 @ Zero $end
$var wire 32 A ALUout [31:0] $end
$var wire 32 B A [31:0] $end
$var parameter 32 C W $end
$var reg 32 D add [31:0] $end
$var reg 32 E outreg [31:0] $end
$var reg 1 F overf $end
$var reg 32 G sub [31:0] $end
$var reg 32 H temp [31:0] $end
$upscope $end
$scope module rf $end
$var wire 32 I Data1 [31:0] $end
$var wire 32 J Data2 [31:0] $end
$var wire 5 K Read1 [4:0] $end
$var wire 5 L Read2 [4:0] $end
$var wire 1 9 RegWrite $end
$var wire 32 M WriteData [31:0] $end
$var wire 5 N WriteReg [4:0] $end
$var wire 1 # clock $end
$var parameter 32 O W $end
$upscope $end
$scope module rom $end
$var wire 4 P address [3:0] $end
$var wire 1 ; oe $end
$var wire 32 Q data [31:0] $end
$var parameter 32 R L $end
$var parameter 32 S W $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 S
b10000 R
b100000 O
b100000 C
b100000 6
b10 5
b1 4
b1100 3
b110 2
b111 1
b0 0
b100000 "
$end
#0
$dumpvars
b100000000000000010011 Q
b0 P
b0 N
bx M
b1 L
b0 K
bx J
b0 I
b11111111111111111111111111111111 H
b11111111111111111111111111111111 G
xF
bx E
b1 D
b0 B
bx A
x@
x?
b1 >
bx =
b0 <
1;
b0 :
09
b0 8
bx 7
b1 /
bx .
b0 -
bx ,
b0 +
b100000000000000010011 *
b0 )
b0 (
b0 '
1&
b0 %
0$
0#
b0 !
$end
#1
0&
1#
#2
0#
#3
1#
#4
1$
0#
#5
0?
0F
0@
b1 .
b1 A
b1 E
b1 M
b1 <
b10 7
b10 =
19
1#
#6
0$
0#
#7
09
1#
